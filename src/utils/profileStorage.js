// src/utils/profileStorage.js

export const saveProfileToLocalStorage = (profile) => {
  localStorage.setItem("userProfile", JSON.stringify(profile));
};
/*

üîç Spiegazione:
Salva un oggetto profile nel localStorage del browser.

JSON.stringify(profile) trasforma l‚Äôoggetto in una stringa, perch√© localStorage pu√≤ salvare solo stringhe.

"userProfile" √® la chiave con cui salvi il profilo: puoi usarla per leggerlo in seguito.

Cosa √®?	                                Spiegazione
export	                                Permette di usare la funzione in altri file JavaScript/React.
const	                                Dichiara una costante: la funzione non cambier√†.
saveProfileToLocalStorage	            √à il nome della funzione che stai creando.
(profile)                           	Il parametro profile √® un oggetto che rappresenta il profilo utente (es: nome, et√†, peso...).
=> { ... }      	                √à una funzione freccia: una forma compatta di funzione.

üîπ localStorage
Cosa √®?	Spiegazione
localStorage	√à una funzionalit√† del browser che permette di salvare dati localmente, in modo persistente.
üìå √à una specie di ‚Äúmemoria del browser‚Äù dove puoi salvare dati come stringhe.

üîπ .setItem("userProfile", ...)
Cosa √®?                     	Spiegazione
.setItem()                  	√à un metodo di localStorage che salva un dato.
"userProfile"	                √à la chiave: un nome identificativo con cui salvi il dato. Puoi usarla dopo per recuperarlo.

üí° √à come mettere qualcosa in un cassetto con un‚Äôetichetta "userProfile".

üîπ JSON.stringify(profile)
Cosa √®?             	Spiegazione
JSON.stringify()	    Converte un oggetto JavaScript in una stringa JSON.
profile	                √à l‚Äôoggetto che contiene i dati del profilo dell‚Äôutente.

üìå localStorage pu√≤ salvare solo stringhe, quindi dobbiamo prima trasformare l'oggetto profile in formato testo (JSON).

Questa funzione:

js
Copia codice
saveProfileToLocalStorage(profile)
Prende un oggetto profile

Lo converte in stringa con JSON.stringify()

Lo salva nel localStorage del browser con la chiave "userProfile"

üß™ Esempio concreto:
js
Copia codice
const profile = {
  nome: "Luca",
  et√†: 25,
  peso: 70
};

saveProfileToLocalStorage(profile);

Risultato salvato nel browser:
"userProfile": "{\"nome\":\"Luca\",\"et√†\":25,\"peso\":70}"


*/

export const loadProfileFromLocalStorage = () => {
  const stored = localStorage.getItem("userProfile");
  return stored ? JSON.parse(stored) : null;
};
/*
Parte	                    Spiegazione

loadProfileFromLocalStorage	√à il nome della funzione. Serve a caricare i dati salvati.
= () => {                  	√à una funzione freccia, senza parametri.

üîÅ Quindi questa funzione non riceve nulla, ma prova a recuperare i dati dal localStorage.

Parte	                        Spiegazione
localStorage.getItem(...)	    Legge un dato dal localStorage, usando la chiave "userProfile".
const stored = ...          	Salva nella variabile stored il valore letto (una stringa JSON oppure null se non esiste).
üìå Se il profilo non √® stato ancora salvato, questa riga restituir√† null.

return stored ? JSON.parse(stored) : null;
Parte	            Spiegazione
stored ? ... : ...	√à un operatore ternario: una specie di if.
JSON.parse(stored)	Se stored esiste, lo trasforma da stringa JSON ‚Üí oggetto JavaScript.
: null	Altrimenti, restituisce null (cio√®, profilo non trovato).



üß† In sintesi:
La funzione:
loadProfileFromLocalStorage()
Cerca di leggere i dati del profilo salvati in precedenza nel localStorage.

Se trova qualcosa:

lo trasforma in oggetto leggibile da JavaScript (con JSON.parse).

Se non trova niente:

restituisce null.
*/